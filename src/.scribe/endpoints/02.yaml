name: EmployerFiles
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/employer/files/test-tasks
    metadata:
      groupName: EmployerFiles
      groupDescription: ''
      subgroup: TestTask
      subgroupDescription: 'Этот метод предоставляет список всех тестовых заданий и связанных с ними вакансий.'
      title: 'Получить список всех тестовых заданий пользователя.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "data": [
                  {
                      "id": 1,
                      "title": "Backend developer",
                      "description": "php php php"
                  },
                  {
                      "id": 2,
                      "title": "Frontend developer",
                      "description": "js js js"
                  },
                  {
                      "id": 3,
                      "title": "QA",
                      "description": "qa qa qa"
                  }
              ],
              "status": "success"
          }
        headers: []
        description: 'Успешный запрос'
        custom: []
      -
        status: 500
        content: |
          {
              "message": "Unknown error",
              "status": "error"
          }
        headers: []
        description: 'Ошибка сервера'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/employer/files/test-tasks/{id}'
    metadata:
      groupName: EmployerFiles
      groupDescription: ''
      subgroup: TestTask
      subgroupDescription: 'Этот метод предоставляет информацию о конкретном тестовом задании, доступном пользователю.'
      title: 'Получить информацию о тестовом задании по его идентификатору.'
      description: 'Этот метод позволяет получить информацию о конкретном тестовом задании'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the test task.'
        required: true
        example: placeat
        type: string
        custom: []
    cleanUrlParameters:
      id: placeat
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "data": {
                  "id": 1,
                  "title": "Backend developer",
                  "description": "php php php",
                  "material_link": "https://www.php.net",
                  "format": "jpeg картинка",
                  "deadline": "4 дня"
              },
              "status": "success"
          }
        headers: []
        description: 'Успешное создание задания'
        custom: []
      -
        status: 404
        content: |
          {
              "message": "test task not found",
              "status": "info"
          }
        headers: []
        description: 'Тестовое задание не найдено'
        custom: []
      -
        status: 500
        content: |
          {
              "message": "Unknown error",
              "status": "error"
          }
        headers: []
        description: 'Неизвестная ошибка'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/employer/files/test-tasks/create
    metadata:
      groupName: EmployerFiles
      groupDescription: ''
      subgroup: TestTask
      subgroupDescription: 'Этот метод обеспечивает создание тестового задания.'
      title: 'Создать тестовое задание.'
      description: 'Этот метод создает новое тестовое задание'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "data": {
                  "id": 49,
                  "title": "Backend developer",
                  "description": "backend backend backend backend backend backend backend backend backend backend ",
                  "material_link": "https://www.meta.com/",
                  "format": "картинкой пожалуйста",
                  "deadline": "5 дней",
                  "file_1": "uploads/test-task/files/1/b5460c5a-4c6c-4d07-9afa-9fa76c506fae.png",
                  "file_2": "uploads/test-task/files/1/57d9851f-7087-44a7-8401-4affaf983706.png",
                  "file_3": null
              },
              "status": "success"
          }
        headers: []
        description: 'Успешное создание задания'
        custom: []
      -
        status: 500
        content: |
          {
              "message": "Unknown error",
              "status": "error"
          }
        headers: []
        description: 'Неизвестная ошибка'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/employer/files/test-tasks/edit/{id}'
    metadata:
      groupName: EmployerFiles
      groupDescription: ''
      subgroup: TestTask
      subgroupDescription: 'Этот метод обеспечивает редактирование тестового задания.'
      title: 'Редактировать тестовое задание.'
      description: 'Этот метод позволяет редактировать существующее тестовое задание по его ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the edit.'
        required: true
        example: dolores
        type: string
        custom: []
    cleanUrlParameters:
      id: dolores
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      vacancy_id:
        name: vacancy_id
        description: 'ID вакансии.'
        required: false
        example: 12
        type: integer
        custom: []
      description:
        name: description
        description: Описание.
        required: false
        example: 'Quos iure accusantium voluptatum est neque qui corporis.'
        type: string
        custom: []
      material_link:
        name: material_link
        description: 'Ссылка на материалы для тестового задания.'
        required: false
        example: null
        type: string
        custom: []
      format:
        name: format
        description: 'Формат тестового задания.'
        required: false
        example: null
        type: string
        custom: []
      test_task_deadline_id:
        name: test_task_deadline_id
        description: 'ID срока выполнения тестового задания.'
        required: false
        example: 17
        type: integer
        custom: []
      files:
        name: files
        description: 'Файлы, связанные с тестовым заданием. Массив файлов.'
        required: false
        example:
          - null
        type: 'file[]'
        custom: []
    cleanBodyParameters:
      vacancy_id: 12
      description: 'Quos iure accusantium voluptatum est neque qui corporis.'
      test_task_deadline_id: 17
    fileParameters:
      files:
        - null
    responses:
      -
        status: 200
        content: |
          {
              "data": {
                  "id": 5,
                  "vacancy_id": "1",
                  "description": "description description description",
                  "material_link": "https://www.meta.com/",
                  "format": "картинкой пожалуйста",
                  "test_task_deadline_id": "1",
                  "detail_list_employees_id": 1,
                  "files": [
                      {
                          "id": 3,
                          "path": "/storage/test_tasks_images/PL3HNidvmJL0ycFu1nDjpyHzIehNC2zpOODjav08.jpg"
                      }
                  ]
              }
          }
        headers: []
        description: 'Успешное редактирование задания'
        custom: []
      -
        status: 404
        content: |
          {
              "message": "Not found",
              "status": "info"
          }
        headers: []
        description: 'Тестовое задание не найдено'
        custom: []
      -
        status: 500
        content: |
          {
              "message": "Unknown error",
              "status": "error"
          }
        headers: []
        description: 'Неизвестная ошибка'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/employer/files/test-tasks/delete
    metadata:
      groupName: EmployerFiles
      groupDescription: ''
      subgroup: TestTask
      subgroupDescription: 'Этот метод обеспечивает удаление тестовых заданий.'
      title: 'Удалить тестовые задания.'
      description: 'Этот метод позволяет удалить одно или несколько тестовых заданий по их ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ids:
        name: ids
        description: 'Массив ID тестовых заданий для удаления.'
        required: true
        example:
          - 11
        type: 'integer[]'
        custom: []
    cleanBodyParameters:
      ids:
        - 11
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "message": "Delete test task",
              "status": "success"
          }
        headers: []
        description: 'Успешное удаление заданий'
        custom: []
      -
        status: 404
        content: |
          {
              "message": "Test task not found",
              "status": "info"
          }
        headers: []
        description: 'Тестовые задания не найдены'
        custom: []
      -
        status: 500
        content: |
          {
              "message": "Unknown error",
              "status": "error"
          }
        headers: []
        description: 'Неизвестная ошибка'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/employer/files/recommendation/create
    metadata:
      groupName: EmployerFiles
      groupDescription: ''
      subgroup: RecommendationLetter
      subgroupDescription: 'Этот метод позволяет создать рекомендательное письмо.'
      title: 'Создать рекомендательное письмо.'
      description: 'Этот метод предназначен для создания рекомендательного письма на основе предоставленных данных.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      work_place:
        name: work_place
        description: 'Обязательно. Место работы.'
        required: false
        example: non
        type: string
        custom: []
      fio:
        name: fio
        description: 'Обязательно. ФИО рекомендуемого сотрудника.'
        required: false
        example: ratione
        type: string
        custom: []
      job_position:
        name: job_position
        description: 'Обязательно. Должность рекомендуемого сотрудника.'
        required: false
        example: eligendi
        type: string
        custom: []
      work_start_period:
        name: work_start_period
        description: 'Обязательно. Дата начала работы.'
        required: false
        example: dolores
        type: date
        custom: []
      work_end_period:
        name: work_end_period
        description: 'Обязательно. Дата окончания работы.'
        required: false
        example: eos
        type: date
        custom: []
      responsibilities:
        name: responsibilities
        description: 'Ответственности сотрудника. Необязательно.'
        required: false
        example: qui
        type: string
        custom: []
      performance_review:
        name: performance_review
        description: 'Оценка производительности. Необязательно.'
        required: false
        example: quibusdam
        type: string
        custom: []
      recommendation_summary:
        name: recommendation_summary
        description: 'Сводка рекомендации. Необязательно.'
        required: false
        example: rerum
        type: string
        custom: []
      personal_traits:
        name: personal_traits
        description: 'Личные качества. Необязательно.'
        required: false
        example: tempora
        type: string
        custom: []
      recommendation_rating_id:
        name: recommendation_rating_id
        description: 'ID рейтинга рекомендации. По умолчанию 1. Необязательно.'
        required: false
        example: 4
        type: integer
        custom: []
      contact_for_details:
        name: contact_for_details
        description: 'Контакт для уточнения информации. Необязательно.'
        required: false
        example: corrupti
        type: string
        custom: []
      position_recommender:
        name: position_recommender
        description: 'Обязательно. Должность рекомендующего.'
        required: false
        example: ipsa
        type: string
        custom: []
      fio_recommender:
        name: fio_recommender
        description: 'Обязательно. ФИО рекомендующего.'
        required: false
        example: sit
        type: string
        custom: []
    cleanBodyParameters:
      work_place: non
      fio: ratione
      job_position: eligendi
      work_start_period: dolores
      work_end_period: eos
      responsibilities: qui
      performance_review: quibusdam
      recommendation_summary: rerum
      personal_traits: tempora
      recommendation_rating_id: 4
      contact_for_details: corrupti
      position_recommender: ipsa
      fio_recommender: sit
    fileParameters: []
    responses:
      -
        status: 201
        content: |
          {
              "work_place": "ABC Corp",
              "fio": "John Doe",
              "job_position": "Software Engineer",
              "work_start_period": "2022-01-01",
              "work_end_period": "2022-12-31",
              "responsibilities": "Developing backend services, working on CI/CD pipelines",
              "performance_review": "Outstanding performance throughout the year",
              "recommendation_summary": "Highly recommended for any software development roles",
              "personal_traits": "Hardworking, Team Player",
              "recommendation_rating_id": 2,
              "contact_for_details": "61829471285",
              "position_recommender": "Senior Engineer",
              "fio_recommender": "Jane Smith"
          }
        headers: []
        description: 'Успешное создание рекомендательного письма'
        custom: []
      -
        status: 400
        content: |
          {
              "message": "Unknown error",
              "status": "error"
          }
        headers: []
        description: 'Неверные входные данные'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/employer/files/recommendation/edit/{id}'
    metadata:
      groupName: EmployerFiles
      groupDescription: ''
      subgroup: RecommendationLetter
      subgroupDescription: 'Этот метод позволяет редактировать рекомендательное письмо.'
      title: 'Редактировать рекомендательное письмо.'
      description: 'Этот метод предназначен для редактирования рекомендательного письма на основе предоставленных данных.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the edit.'
        required: true
        example: adipisci
        type: string
        custom: []
    cleanUrlParameters:
      id: adipisci
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      work_place:
        name: work_place
        description: 'Обязательно. Новое место работы.'
        required: false
        example: in
        type: string
        custom: []
      fio:
        name: fio
        description: 'Обязательно. Новое ФИО рекомендуемого сотрудника.'
        required: false
        example: molestiae
        type: string
        custom: []
      job_position:
        name: job_position
        description: 'Обязательно. Новая должность рекомендуемого сотрудника.'
        required: false
        example: voluptas
        type: string
        custom: []
      work_start_period:
        name: work_start_period
        description: 'Обязательно. Новая дата начала работы.'
        required: false
        example: nam
        type: date
        custom: []
      work_end_period:
        name: work_end_period
        description: 'Обязательно. Новая дата окончания работы.'
        required: false
        example: commodi
        type: date
        custom: []
      responsibilities:
        name: responsibilities
        description: 'Новые ответственности сотрудника. Необязательно.'
        required: false
        example: officiis
        type: string
        custom: []
      performance_review:
        name: performance_review
        description: 'Новая оценка производительности. Необязательно.'
        required: false
        example: quia
        type: string
        custom: []
      recommendation_summary:
        name: recommendation_summary
        description: 'Новая сводка рекомендации. Необязательно.'
        required: false
        example: illum
        type: string
        custom: []
      personal_traits:
        name: personal_traits
        description: 'Новые личные качества. Необязательно.'
        required: false
        example: rerum
        type: string
        custom: []
      recommendation_rating_id:
        name: recommendation_rating_id
        description: 'Новый ID рейтинга рекомендации. Необязательно.'
        required: false
        example: 9
        type: integer
        custom: []
      contact_for_details:
        name: contact_for_details
        description: 'Новый контакт для уточнения информации. Необязательно.'
        required: false
        example: expedita
        type: string
        custom: []
      position_recommender:
        name: position_recommender
        description: 'Обязательно. Новая должность рекомендующего.'
        required: false
        example: deleniti
        type: string
        custom: []
      fio_recommender:
        name: fio_recommender
        description: 'Обязательно. Новое ФИО рекомендующего.'
        required: false
        example: beatae
        type: string
        custom: []
    cleanBodyParameters:
      work_place: in
      fio: molestiae
      job_position: voluptas
      work_start_period: nam
      work_end_period: commodi
      responsibilities: officiis
      performance_review: quia
      recommendation_summary: illum
      personal_traits: rerum
      recommendation_rating_id: 9
      contact_for_details: expedita
      position_recommender: deleniti
      fio_recommender: beatae
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "data": {
                  "id": 4,
                  "work_place": "ABC Corp",
                  "company": {
                      "id": 1,
                      "name": "АТ-ВОРК",
                      "logo_path": "uploads/company/logo_image/1/197f308a-ba14-4ed8-9620-f8a46bd2dbf6.png"
                  },
                  "fio": "John Doe",
                  "job_position": "Software Engineer",
                  "work_start_period": "2022-01-01",
                  "work_end_period": "2022-12-31",
                  "responsibilities": "Developing backend services, working on CI/CD pipelines",
                  "performance_review": "Outstanding performance throughout the year",
                  "recommendation_summary": "Highly recommended for any software development roles",
                  "personal_traits": "Hardworking, Team Player",
                  "recommendation_rating_id": 2,
                  "contact_for_details": "61829471285",
                  "position_recommender": "Senior Engineer",
                  "fio_recommender": "Jane Smith"
              },
              "status": "success"
          }
        headers: []
        description: 'Успешное редактирование рекомендательного письма'
        custom: []
      -
        status: 400
        content: |
          {
              "message": "Unknown error",
              "status": "error"
          }
        headers: []
        description: 'Неверные входные данные'
        custom: []
      -
        status: 404
        content: |
          {
              "message": "Recommendation letter not found",
              "status": "info"
          }
        headers: []
        description: 'Рекомендательное письмо не найдено'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/employer/files/recommendation
    metadata:
      groupName: EmployerFiles
      groupDescription: ''
      subgroup: RecommendationLetter
      subgroupDescription: 'Этот метод позволяет получить все активные рекомендательные письма текущего аккаунта.'
      title: 'Получить рекомендательные письма.'
      description: 'Этот метод предназначен для получения всех активных (не архивированных) рекомендательных писем, связанных с текущим аккаунтом.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "data": [
                  {
                      "id": 1,
                      "fio": "Mark Smith",
                      "job_position": "Software Engineer",
                      "work_start_period": "2022-01-01",
                      "work_end_period": "2022-12-31",
                      "responsibilities": "Developing backend services, working on CI/CD pipelines",
                      "created_at": "2023-08-27T19:30:18.000000Z"
                  },
                  {
                      "id": 2,
                      "fio": "John Doe",
                      "job_position": "Software Engineer",
                      "work_start_period": "2022-01-01",
                      "work_end_period": "2022-12-31",
                      "responsibilities": "Developing backend services, working on CI/CD pipelines",
                      "created_at": "2023-08-27T19:30:41.000000Z"
                  }
              ],
              "status": "success"
          }
        headers: []
        description: 'Успешное получение рекомендательных писем'
        custom: []
      -
        status: 500
        content: |
          {
              "message": "Unknown error",
              "status": "error"
          }
        headers: []
        description: 'Внутренняя ошибка сервера'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/employer/files/recommendation/{id}'
    metadata:
      groupName: EmployerFiles
      groupDescription: ''
      subgroup: RecommendationLetter
      subgroupDescription: 'Этот метод позволяет получить детализированную информацию о рекомендательном письме по его ID.'
      title: 'Получить рекомендательное письмо по ID.'
      description: 'Этот метод предназначен для получения детализированной информации о рекомендательном письме, связанном с текущим аккаунтом и указанным ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the recommendation.'
        required: true
        example: libero
        type: string
        custom: []
    cleanUrlParameters:
      id: libero
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "data": [
                  {
                      "id": 4,
                      "work_place": "ABC Corp",
                      "company": {
                          "id": 1,
                          "name": "АТ-ВОРК",
                          "logo_path": "uploads/company/logo_image/1/197f308a-ba14-4ed8-9620-f8a46bd2dbf6.png"
                      },
                      "fio": "John Doe",
                      "job_position": "Software Engineer",
                      "work_start_period": "2022-01-01",
                      "work_end_period": "2022-12-31",
                      "responsibilities": "Developing backend services, working on CI/CD pipelines",
                      "performance_review": "Outstanding performance throughout the year",
                      "recommendation_summary": "Highly recommended for any software development roles",
                      "personal_traits": "Hardworking, Team Player",
                      "contact_for_details": "61829471285",
                      "position_recommender": "Senior Engineer",
                      "fio_recommender": "Jane Smith",
                      "created_at": "2023-08-27T19:30:41.000000Z",
                      "rating": {
                          "id": 2,
                          "title": "Я рекомендую с некоторыми оговорками"
                      }
                  }
              ],
              "status": "success"
          }
        headers: []
        description: 'Успешное получение деталей рекомендательного письма'
        custom: []
      -
        status: 404
        content: |
          {
              "message": "Recommendation letter not found",
              "status": "info"
          }
        headers: []
        description: 'Рекомендательное письмо не найдено'
        custom: []
      -
        status: 500
        content: |
          {
              "message": "Unknown error",
              "status": "error"
          }
        headers: []
        description: 'Внутренняя ошибка сервера'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/employer/files/recommendation/delete
    metadata:
      groupName: EmployerFiles
      groupDescription: ''
      subgroup: RecommendationLetter
      subgroupDescription: 'Этот метод позволяет удалить одно или несколько рекомендательных писем, принадлежащих текущему аккаунту.'
      title: 'Удалить рекомендательные письма.'
      description: |-
        Этот метод предназначен для удаления одного или нескольких рекомендательных писем, связанных с текущим аккаунтом.
        Вместо физического удаления, метод помечает письма как архивные.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "message": "Recommendation letter deleted",
              "status": "success"
          }
        headers: []
        description: 'Успешное удаление рекомендательных писем'
        custom: []
      -
        status: 200
        content: |
          {
              "message": "Recommendation letter not found",
              "status": "info"
          }
        headers: []
        description: 'Успешное удаление рекомендательных писем'
        custom: []
      -
        status: 500
        content: |
          {
              "message": "Unknown error",
              "status": "error"
          }
        headers: []
        description: 'Внутренняя ошибка сервера'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/employer/files/my/company
    metadata:
      groupName: EmployerFiles
      groupDescription: ''
      subgroup: Company
      subgroupDescription: 'Этот метод используется для получения информации о текущей компании, под которой залогинен пользователь.'
      title: 'Получить текущую компанию.'
      description: |-
        Этот метод возвращает информацию о компании, под которой в данный момент залогинен пользователь.
        Информация о компании включает в себя ID, полное имя и логотип.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "data": {
                  "id": 1,
                  "name": "АТ-ВОРК",
                  "logo_path": "uploads/company/logo_image/1/197f308a-ba14-4ed8-9620-f8a46bd2dbf6.png"
              },
              "status": "success"
          }
        headers: []
        description: 'Успешное удаление рекомендательных писем'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/employer/files/recommendation-ratings
    metadata:
      groupName: EmployerFiles
      groupDescription: ''
      subgroup: RecommendationRating
      subgroupDescription: 'Этот метод используется для получения списка доступных рейтингов для рекомендационных писем.'
      title: 'Получение списка рейтингов рекомендаций.'
      description: |-
        Этот метод возвращает все доступные рейтинги для рекомендационных писем.
        Каждый рейтинг включает в себя уникальный идентификатор и заголовок.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "data": [
                  {
                      "id": 1,
                      "title": "Я безоговорочно рекомендую"
                  },
                  {
                      "id": 2,
                      "title": "Я рекомендую с некоторыми оговорками"
                  },
                  {
                      "id": 3,
                      "title": "Я рекомендую с трудом"
                  },
                  {
                      "id": 4,
                      "title": "Я не рекомендую"
                  }
              ],
              "status": "success"
          }
        headers: []
        description: 'Успешное удаление рекомендательных писем'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/job-offer
    metadata:
      groupName: EmployerFiles
      groupDescription: ''
      subgroup: JobOffers
      subgroupDescription: 'Этот метод предоставляет список всех активных предложений о работе, связанных с текущим аккаунтом.'
      title: 'Получить список всех активных предложений о работе для текущего аккаунта.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "data": [
                  {
                      "id": 1,
                      "full_name": "Mark Zuckerberg",
                      "company": {
                          "id": 1,
                          "name": "АТ-ВОРК",
                          "logo_path": "uploads/company/logo_image/1/6ec4f3b8-e176-4208-b9b7-fc41c9c31082.png"
                      },
                      "vacancy": {
                          "id": 1,
                          "name": "Backend developer"
                      },
                      "reporting_to": "Jane Smith",
                      "responsibilities": "Develop software, collaborate with team, write tests",
                      "created_at": "2023-08-28T08:22:04.000000Z"
                  },
                  {
                      "id": 2,
                      "full_name": "Mark Zuckerberg",
                      "company": {
                          "id": 1,
                          "name": "АТ-ВОРК",
                          "logo_path": "uploads/company/logo_image/1/6ec4f3b8-e176-4208-b9b7-fc41c9c31082.png"
                      },
                      "vacancy": {
                          "id": 1,
                          "name": "Backend developer"
                      },
                      "reporting_to": "Jane Smith",
                      "responsibilities": "Develop software, collaborate with team, write tests",
                      "created_at": "2023-08-28T08:22:09.000000Z"
                  }
              ],
              "status": "success"
          }
        headers: []
        description: 'Успешный запрос'
        custom: []
      -
        status: 500
        content: |
          {
              "message": "Unknown error",
              "status": "error"
          }
        headers: []
        description: 'Ошибка сервера'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/job-offer/{id}'
    metadata:
      groupName: EmployerFiles
      groupDescription: ''
      subgroup: JobOffers
      subgroupDescription: 'Этот метод предоставляет детальную информацию о конкретном предложении о работе, связанном с текущим аккаунтом.'
      title: 'Посмотреть детали конкретного предложения о работе.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the job offer.'
        required: true
        example: veritatis
        type: string
        custom: []
    cleanUrlParameters:
      id: veritatis
    queryParameters:
      id:
        name: id
        description: 'Уникальный идентификатор предложения о работе.'
        required: true
        example: molestias
        type: string
        custom: []
    cleanQueryParameters:
      id: molestias
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "data": {
                  "id": 1,
                  "full_name": "Mark Zuckerberg",
                  "company": {
                      "id": 1,
                      "name": "АТ-ВОРК",
                      "logo_path": "uploads/company/logo_image/1/6ec4f3b8-e176-4208-b9b7-fc41c9c31082.png"
                  },
                  "vacancy": {
                      "id": 1,
                      "name": "Backend developer"
                  },
                  "position_name": null,
                  "reporting_to": "Jane Smith",
                  "responsibilities": "Develop software, collaborate with team, write tests",
                  "probation_period": null,
                  "probation_duration_months": 3,
                  "probation_tasks": "Complete the onboarding process, develop a small project",
                  "consider_new_responsibilities": 1,
                  "new_responsibilities": "Handle client communications",
                  "fixed_salary": 5000,
                  "variable_salary_percentage": 10,
                  "percentage_from": 1000,
                  "additional_bonuses": "Year-end bonus, project completion bonus",
                  "salary_paid": "Monthly",
                  "penalties": "Late for work, missed deadlines",
                  "overtime_compensation": 1,
                  "overtime_compensation_text": "Paid at 1.5x hourly rate",
                  "sick_leave_paid": 1,
                  "sick_leave_text": "Up to 10 days paid sick leave per year",
                  "salary_review_opportunity": 1,
                  "salary_indexation": 0,
                  "working_week": {
                      "id": 2,
                      "title": "6-дневная"
                  },
                  "working_day": "9am to 5pm",
                  "work_start_time": "16:00",
                  "work_end_time": "22:20",
                  "lunch_break_duration": "1 hour",
                  "lunch_break_start_time": "12:00",
                  "lunch_break_end_time": "13:00",
                  "work_schedule": {
                      "id": 3,
                      "title": "Гибкий график"
                  },
                  "work_format": {
                      "id": 2,
                      "title": "Удаленно"
                  },
                  "working_hours_type": {
                      "id": 1,
                      "title": "Фиксированные"
                  },
                  "work_address": "",
                  "vacation_duration": "30 days",
                  "job_start_date": "2023-08-29 00:00:00",
                  "job_start_time": "12:00",
                  "additional_conditions": "Remote work available 2 days a week",
                  "contact_person": "Алексей Иванов",
                  "position": "Менеджер по продажам",
                  "phone_number": "+7 123 456-78-90",
                  "email": "a.ivanov@example.com",
                  "call_time_from": "09:00",
                  "call_time_to": "18:00",
                  "availability_option": {
                      "id": 1,
                      "title": "в любое время"
                  },
                  "response_due_date": "2022-10-28",
                  "created_at": "2023-08-28T08:22:04.000000Z"
              },
              "status": "success"
          }
        headers: []
        description: 'Успешный запрос'
        custom: []
      -
        status: 404
        content: |
          {
              "message": "Job offer not found",
              "status": "info"
          }
        headers: []
        description: 'Предложение не найдено'
        custom: []
      -
        status: 500
        content: |
          {
              "message": "Unknown error",
              "status": "error"
          }
        headers: []
        description: 'Ошибка сервера'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/job-offer/create
    metadata:
      groupName: EmployerFiles
      groupDescription: ''
      subgroup: JobOffers
      subgroupDescription: 'Этот метод создает конкретное предложение о работе.'
      title: 'Создает предложение о работе'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      offer_id:
        name: offer_id
        description: 'Идентификатор предложения о работе. Пример: 1'
        required: true
        example: 15
        type: integer
        custom: []
      full_name:
        name: full_name
        description: 'optional Полное имя. Пример: "Иван Иванов"'
        required: false
        example: nobis
        type: string
        custom: []
      vacancy_id:
        name: vacancy_id
        description: 'optional Идентификатор вакансии. Пример: 2'
        required: false
        example: 20
        type: integer
        custom: []
      reporting_to:
        name: reporting_to
        description: 'optional Кому подотчетен. Пример: "Алексей Сергеев"'
        required: false
        example: labore
        type: string
        custom: []
      responsibilities:
        name: responsibilities
        description: 'optional Обязанности. Пример: "Разработка ПО"'
        required: false
        example: qui
        type: string
        custom: []
      probation_duration_months:
        name: probation_duration_months
        description: 'optional Продолжительность испытательного срока в месяцах. Пример: 3'
        required: false
        example: 15
        type: integer
        custom: []
      probation_tasks:
        name: probation_tasks
        description: 'optional Задачи на испытательный срок. Пример: "Рефакторинг кода"'
        required: false
        example: neque
        type: string
        custom: []
      consider_new_responsibilities:
        name: consider_new_responsibilities
        description: 'optional Рассмотрение новых обязанностей. Пример: true'
        required: false
        example: true
        type: boolean
        custom: []
      new_responsibilities:
        name: new_responsibilities
        description: 'optional Новые обязанности. Пример: "Наставничество"'
        required: false
        example: ratione
        type: string
        custom: []
      fixed_salary:
        name: fixed_salary
        description: 'optional Фиксированная зарплата. Пример: 120000'
        required: false
        example: 6
        type: integer
        custom: []
      variable_salary_percentage:
        name: variable_salary_percentage
        description: 'optional Процентная ставка переменной части зарплаты. Пример: 20'
        required: false
        example: 8
        type: integer
        custom: []
      percentage_from:
        name: percentage_from
        description: 'optional Процент с чего. Пример: 10000'
        required: false
        example: 20
        type: integer
        custom: []
      additional_bonuses:
        name: additional_bonuses
        description: 'optional Дополнительные бонусы. Пример: "Премии по итогам проекта"'
        required: false
        example: rerum
        type: string
        custom: []
      salary_paid:
        name: salary_paid
        description: 'optional Как выплачивается зарплата. Пример: "На карту"'
        required: false
        example: eveniet
        type: string
        custom: []
      penalties:
        name: penalties
        description: 'optional Штрафы. Пример: "За опоздание"'
        required: false
        example: assumenda
        type: string
        custom: []
      overtime_compensation:
        name: overtime_compensation
        description: 'optional Компенсация за переработку. Пример: 500'
        required: false
        example: 20
        type: integer
        custom: []
      overtime_compensation_text:
        name: overtime_compensation_text
        description: 'optional Текстовое описание компенсации за переработку. Пример: "500 рублей в час"'
        required: false
        example: sunt
        type: string
        custom: []
      sick_leave_paid:
        name: sick_leave_paid
        description: 'optional Оплата больничного. Пример: true'
        required: false
        example: false
        type: boolean
        custom: []
      sick_leave_text:
        name: sick_leave_text
        description: 'optional Текстовое описание оплаты больничного. Пример: "100% оплата"'
        required: false
        example: beatae
        type: string
        custom: []
      salary_review_opportunity:
        name: salary_review_opportunity
        description: 'optional Возможность пересмотра зарплаты. Пример: true'
        required: false
        example: true
        type: boolean
        custom: []
      salary_indexation:
        name: salary_indexation
        description: 'optional Индексация зарплаты. Пример: 5'
        required: false
        example: 8
        type: integer
        custom: []
      working_week_id:
        name: working_week_id
        description: 'optional Идентификатор рабочей недели. Пример: 1'
        required: false
        example: 4
        type: integer
        custom: []
      working_day:
        name: working_day
        description: 'optional Рабочий день. Пример: "Понедельник"'
        required: false
        example: reiciendis
        type: string
        custom: []
      work_start_time:
        name: work_start_time
        description: 'optional Время начала работы. Пример: "09:00"'
        required: false
        example: accusamus
        type: string
        custom: []
      work_end_time:
        name: work_end_time
        description: 'optional Время окончания работы. Пример: "18:00"'
        required: false
        example: et
        type: string
        custom: []
      lunch_break_duration:
        name: lunch_break_duration
        description: 'optional Длительность обеденного перерыва. Пример: "1 час"'
        required: false
        example: nesciunt
        type: string
        custom: []
      lunch_break_start_time:
        name: lunch_break_start_time
        description: 'optional Время начала обеденного перерыва. Пример: "13:00"'
        required: false
        example: aliquid
        type: string
        custom: []
      lunch_break_end_time:
        name: lunch_break_end_time
        description: 'optional Время окончания обеденного перерыва. Пример: "14:00"'
        required: false
        example: unde
        type: string
        custom: []
      work_schedule_id:
        name: work_schedule_id
        description: 'optional Идентификатор графика работы. Пример: 1'
        required: false
        example: 12
        type: integer
        custom: []
      work_format_id:
        name: work_format_id
        description: 'optional Идентификатор формата работы. Пример: 1'
        required: false
        example: 6
        type: integer
        custom: []
      working_hours_type_id:
        name: working_hours_type_id
        description: 'optional Идентификатор типа рабочего времени. Пример: 1'
        required: false
        example: 16
        type: integer
        custom: []
      work_address:
        name: work_address
        description: 'optional Адрес работы. Пример: "ул. Ленина, 1"'
        required: false
        example: quo
        type: string
        custom: []
      vacation_duration:
        name: vacation_duration
        description: 'optional Длительность отпуска. Пример: "28 дней"'
        required: false
        example: est
        type: string
        custom: []
      job_start_date:
        name: job_start_date
        description: 'optional Дата начала работы. Пример: "2023-09-01"'
        required: false
        example: blanditiis
        type: date
        custom: []
      job_start_time:
        name: job_start_time
        description: 'optional Время начала работы. Пример: "09:00"'
        required: false
        example: odio
        type: time
        custom: []
      additional_conditions:
        name: additional_conditions
        description: 'optional Дополнительные условия. Пример: "Обучение за счет компании"'
        required: false
        example: aut
        type: string
        custom: []
      contact_person:
        name: contact_person
        description: 'optional Контактное лицо. Пример: "Александра"'
        required: false
        example: distinctio
        type: string
        custom: []
      position:
        name: position
        description: 'optional Должность контактного лица. Пример: "Менеджер по персоналу"'
        required: false
        example: laudantium
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: 'optional Телефон контактного лица. Пример: "+79161234567"'
        required: false
        example: rerum
        type: string
        custom: []
      email:
        name: email
        description: 'optional Электронная почта контактного лица. Пример: "hr@company.com"'
        required: false
        example: mason.dickinson@example.net
        type: string
        custom: []
      call_time_from:
        name: call_time_from
        description: 'optional Время, начиная с которого можно звонить контактному лицу. Пример: "10:00"'
        required: false
        example: facilis
        type: time
        custom: []
      call_time_to:
        name: call_time_to
        description: 'optional Время, до которого можно звонить контактному лицу. Пример: "18:00"'
        required: false
        example: enim
        type: time
        custom: []
      availability_option_id:
        name: availability_option_id
        description: 'optional Идентификатор параметра доступности. Пример: 1'
        required: false
        example: 11
        type: integer
        custom: []
      response_due_date:
        name: response_due_date
        description: 'optional Срок, до которого нужно получить ответ. Пример: "2023-09-15"'
        required: false
        example: necessitatibus
        type: date
        custom: []
    cleanBodyParameters:
      offer_id: 15
      full_name: nobis
      vacancy_id: 20
      reporting_to: labore
      responsibilities: qui
      probation_duration_months: 15
      probation_tasks: neque
      consider_new_responsibilities: true
      new_responsibilities: ratione
      fixed_salary: 6
      variable_salary_percentage: 8
      percentage_from: 20
      additional_bonuses: rerum
      salary_paid: eveniet
      penalties: assumenda
      overtime_compensation: 20
      overtime_compensation_text: sunt
      sick_leave_paid: false
      sick_leave_text: beatae
      salary_review_opportunity: true
      salary_indexation: 8
      working_week_id: 4
      working_day: reiciendis
      work_start_time: accusamus
      work_end_time: et
      lunch_break_duration: nesciunt
      lunch_break_start_time: aliquid
      lunch_break_end_time: unde
      work_schedule_id: 12
      work_format_id: 6
      working_hours_type_id: 16
      work_address: quo
      vacation_duration: est
      job_start_date: blanditiis
      job_start_time: odio
      additional_conditions: aut
      contact_person: distinctio
      position: laudantium
      phone_number: rerum
      email: mason.dickinson@example.net
      call_time_from: facilis
      call_time_to: enim
      availability_option_id: 11
      response_due_date: necessitatibus
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "data": {
                  "id": 1,
                  "full_name": "Mark Zuckerberg",
                  "company": {
                      "id": 1,
                      "name": "АТ-ВОРК",
                      "logo_path": "uploads/company/logo_image/1/6ec4f3b8-e176-4208-b9b7-fc41c9c31082.png"
                  },
                  "vacancy": {
                      "id": 1,
                      "name": "Backend developer"
                  },
                  "position_name": null,
                  "reporting_to": "Jane Smith",
                  "responsibilities": "Develop software, collaborate with team, write tests",
                  "probation_period": null,
                  "probation_duration_months": 3,
                  "probation_tasks": "Complete the onboarding process, develop a small project",
                  "consider_new_responsibilities": true,
                  "new_responsibilities": "Handle client communications",
                  "fixed_salary": 5000,
                  "variable_salary_percentage": 10,
                  "percentage_from": 1000,
                  "additional_bonuses": "Year-end bonus, project completion bonus",
                  "salary_paid": "Monthly",
                  "penalties": "Late for work, missed deadlines",
                  "overtime_compensation": true,
                  "overtime_compensation_text": "Paid at 1.5x hourly rate",
                  "sick_leave_paid": true,
                  "sick_leave_text": "Up to 10 days paid sick leave per year",
                  "salary_review_opportunity": true,
                  "salary_indexation": false,
                  "working_week": {
                      "id": 2,
                      "title": "6-дневная"
                  },
                  "working_day": "9am to 5pm",
                  "work_start_time": "16:00",
                  "work_end_time": "22:20",
                  "lunch_break_duration": "1 hour",
                  "lunch_break_start_time": "12:00",
                  "lunch_break_end_time": "13:00",
                  "work_schedule": {
                      "id": 3,
                      "title": "Гибкий график"
                  },
                  "work_format": {
                      "id": 2,
                      "title": "Удаленно"
                  },
                  "working_hours_type": {
                      "id": 1,
                      "title": "Фиксированные"
                  },
                  "work_address": "",
                  "vacation_duration": "30 days",
                  "job_start_date": "2023-08-28",
                  "job_start_time": "12:00",
                  "additional_conditions": "Remote work available 2 days a week",
                  "contact_person": "Алексей Иванов",
                  "position": "Менеджер по продажам",
                  "phone_number": "+7 123 456-78-90",
                  "email": "a.ivanov@example.com",
                  "call_time_from": "09:00",
                  "call_time_to": "18:00",
                  "availability_option": {
                      "id": 1,
                      "title": "в любое время"
                  },
                  "response_due_date": "2022-10-28",
                  "created_at": "2023-08-28T08:22:04.000000Z"
              },
              "status": "success"
          }
        headers: []
        description: 'Успешный запрос'
        custom: []
      -
        status: 404
        content: |
          {
              "message": "The selected offer id is invalid.",
              "errors": {
                  "offer_id": [
                      "The selected offer id is invalid."
                  ]
              }
          }
        headers: []
        description: 'Предложение не найдено'
        custom: []
      -
        status: 500
        content: |
          {
              "message": "Unknown error",
              "status": "error"
          }
        headers: []
        description: 'Ошибка сервера'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/job-offer/edit
    metadata:
      groupName: EmployerFiles
      groupDescription: ''
      subgroup: JobOffers
      subgroupDescription: 'Этот метод обновляет конкретное предложение о работе, связанном с текущим аккаунтом.'
      title: 'Обновление существующего предложения о работе'
      description: 'Обновляет детали существующего предложения о работе для аутентифицированного аккаунта.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      offer_id:
        name: offer_id
        description: 'Идентификатор предложения о работе. Пример: 1'
        required: true
        example: 20
        type: integer
        custom: []
      full_name:
        name: full_name
        description: 'optional Полное имя. Пример: "Иван Иванов"'
        required: false
        example: dolor
        type: string
        custom: []
      vacancy_id:
        name: vacancy_id
        description: 'optional Идентификатор вакансии. Пример: 2'
        required: false
        example: 16
        type: integer
        custom: []
      reporting_to:
        name: reporting_to
        description: 'optional Кому подотчетен. Пример: "Алексей Сергеев"'
        required: false
        example: ipsum
        type: string
        custom: []
      responsibilities:
        name: responsibilities
        description: 'optional Обязанности. Пример: "Разработка ПО"'
        required: false
        example: odit
        type: string
        custom: []
      probation_duration_months:
        name: probation_duration_months
        description: 'optional Продолжительность испытательного срока в месяцах. Пример: 3'
        required: false
        example: 16
        type: integer
        custom: []
      probation_tasks:
        name: probation_tasks
        description: 'optional Задачи на испытательный срок. Пример: "Рефакторинг кода"'
        required: false
        example: earum
        type: string
        custom: []
      consider_new_responsibilities:
        name: consider_new_responsibilities
        description: 'optional Рассмотрение новых обязанностей. Пример: true'
        required: false
        example: false
        type: boolean
        custom: []
      new_responsibilities:
        name: new_responsibilities
        description: 'optional Новые обязанности. Пример: "Наставничество"'
        required: false
        example: ut
        type: string
        custom: []
      fixed_salary:
        name: fixed_salary
        description: 'optional Фиксированная зарплата. Пример: 120000'
        required: false
        example: 16
        type: integer
        custom: []
      variable_salary_percentage:
        name: variable_salary_percentage
        description: 'optional Процентная ставка переменной части зарплаты. Пример: 20'
        required: false
        example: 7
        type: integer
        custom: []
      percentage_from:
        name: percentage_from
        description: 'optional Процент с чего. Пример: 10000'
        required: false
        example: 4
        type: integer
        custom: []
      additional_bonuses:
        name: additional_bonuses
        description: 'optional Дополнительные бонусы. Пример: "Премии по итогам проекта"'
        required: false
        example: minus
        type: string
        custom: []
      salary_paid:
        name: salary_paid
        description: 'optional Как выплачивается зарплата. Пример: "На карту"'
        required: false
        example: dolorem
        type: string
        custom: []
      penalties:
        name: penalties
        description: 'optional Штрафы. Пример: "За опоздание"'
        required: false
        example: et
        type: string
        custom: []
      overtime_compensation:
        name: overtime_compensation
        description: 'optional Компенсация за переработку. Пример: 500'
        required: false
        example: 9
        type: integer
        custom: []
      overtime_compensation_text:
        name: overtime_compensation_text
        description: 'optional Текстовое описание компенсации за переработку. Пример: "500 рублей в час"'
        required: false
        example: quaerat
        type: string
        custom: []
      sick_leave_paid:
        name: sick_leave_paid
        description: 'optional Оплата больничного. Пример: true'
        required: false
        example: false
        type: boolean
        custom: []
      sick_leave_text:
        name: sick_leave_text
        description: 'optional Текстовое описание оплаты больничного. Пример: "100% оплата"'
        required: false
        example: velit
        type: string
        custom: []
      salary_review_opportunity:
        name: salary_review_opportunity
        description: 'optional Возможность пересмотра зарплаты. Пример: true'
        required: false
        example: false
        type: boolean
        custom: []
      salary_indexation:
        name: salary_indexation
        description: 'optional Индексация зарплаты. Пример: 5'
        required: false
        example: 10
        type: integer
        custom: []
      working_week_id:
        name: working_week_id
        description: 'optional Идентификатор рабочей недели. Пример: 1'
        required: false
        example: 13
        type: integer
        custom: []
      working_day:
        name: working_day
        description: 'optional Рабочий день. Пример: "Понедельник"'
        required: false
        example: nostrum
        type: string
        custom: []
      work_start_time:
        name: work_start_time
        description: 'optional Время начала работы. Пример: "09:00"'
        required: false
        example: aut
        type: string
        custom: []
      work_end_time:
        name: work_end_time
        description: 'optional Время окончания работы. Пример: "18:00"'
        required: false
        example: quia
        type: string
        custom: []
      lunch_break_duration:
        name: lunch_break_duration
        description: 'optional Длительность обеденного перерыва. Пример: "1 час"'
        required: false
        example: illum
        type: string
        custom: []
      lunch_break_start_time:
        name: lunch_break_start_time
        description: 'optional Время начала обеденного перерыва. Пример: "13:00"'
        required: false
        example: asperiores
        type: string
        custom: []
      lunch_break_end_time:
        name: lunch_break_end_time
        description: 'optional Время окончания обеденного перерыва. Пример: "14:00"'
        required: false
        example: voluptatem
        type: string
        custom: []
      work_schedule_id:
        name: work_schedule_id
        description: 'optional Идентификатор графика работы. Пример: 1'
        required: false
        example: 17
        type: integer
        custom: []
      work_format_id:
        name: work_format_id
        description: 'optional Идентификатор формата работы. Пример: 1'
        required: false
        example: 6
        type: integer
        custom: []
      working_hours_type_id:
        name: working_hours_type_id
        description: 'optional Идентификатор типа рабочего времени. Пример: 1'
        required: false
        example: 8
        type: integer
        custom: []
      work_address:
        name: work_address
        description: 'optional Адрес работы. Пример: "ул. Ленина, 1"'
        required: false
        example: sed
        type: string
        custom: []
      vacation_duration:
        name: vacation_duration
        description: 'optional Длительность отпуска. Пример: "28 дней"'
        required: false
        example: laborum
        type: string
        custom: []
      job_start_date:
        name: job_start_date
        description: 'optional Дата начала работы. Пример: "2023-09-01"'
        required: false
        example: commodi
        type: date
        custom: []
      job_start_time:
        name: job_start_time
        description: 'optional Время начала работы. Пример: "09:00"'
        required: false
        example: quis
        type: time
        custom: []
      additional_conditions:
        name: additional_conditions
        description: 'optional Дополнительные условия. Пример: "Обучение за счет компании"'
        required: false
        example: quidem
        type: string
        custom: []
      contact_person:
        name: contact_person
        description: 'optional Контактное лицо. Пример: "Александра"'
        required: false
        example: rerum
        type: string
        custom: []
      position:
        name: position
        description: 'optional Должность контактного лица. Пример: "Менеджер по персоналу"'
        required: false
        example: reiciendis
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: 'optional Телефон контактного лица. Пример: "+79161234567"'
        required: false
        example: fugiat
        type: string
        custom: []
      email:
        name: email
        description: 'optional Электронная почта контактного лица. Пример: "hr@company.com"'
        required: false
        example: rolfson.kirstin@example.net
        type: string
        custom: []
      call_time_from:
        name: call_time_from
        description: 'optional Время, начиная с которого можно звонить контактному лицу. Пример: "10:00"'
        required: false
        example: id
        type: time
        custom: []
      call_time_to:
        name: call_time_to
        description: 'optional Время, до которого можно звонить контактному лицу. Пример: "18:00"'
        required: false
        example: dolor
        type: time
        custom: []
      availability_option_id:
        name: availability_option_id
        description: 'optional Идентификатор параметра доступности. Пример: 1'
        required: false
        example: 6
        type: integer
        custom: []
      response_due_date:
        name: response_due_date
        description: 'optional Срок, до которого нужно получить ответ. Пример: "2023-09-15"'
        required: false
        example: eos
        type: date
        custom: []
    cleanBodyParameters:
      offer_id: 20
      full_name: dolor
      vacancy_id: 16
      reporting_to: ipsum
      responsibilities: odit
      probation_duration_months: 16
      probation_tasks: earum
      consider_new_responsibilities: false
      new_responsibilities: ut
      fixed_salary: 16
      variable_salary_percentage: 7
      percentage_from: 4
      additional_bonuses: minus
      salary_paid: dolorem
      penalties: et
      overtime_compensation: 9
      overtime_compensation_text: quaerat
      sick_leave_paid: false
      sick_leave_text: velit
      salary_review_opportunity: false
      salary_indexation: 10
      working_week_id: 13
      working_day: nostrum
      work_start_time: aut
      work_end_time: quia
      lunch_break_duration: illum
      lunch_break_start_time: asperiores
      lunch_break_end_time: voluptatem
      work_schedule_id: 17
      work_format_id: 6
      working_hours_type_id: 8
      work_address: sed
      vacation_duration: laborum
      job_start_date: commodi
      job_start_time: quis
      additional_conditions: quidem
      contact_person: rerum
      position: reiciendis
      phone_number: fugiat
      email: rolfson.kirstin@example.net
      call_time_from: id
      call_time_to: dolor
      availability_option_id: 6
      response_due_date: eos
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "data": {
                  "id": 1,
                  "full_name": "Mark Zuckerberg",
                  "company": {
                      "id": 1,
                      "name": "АТ-ВОРК",
                      "logo_path": "uploads/company/logo_image/1/6ec4f3b8-e176-4208-b9b7-fc41c9c31082.png"
                  },
                  "vacancy": {
                      "id": 1,
                      "name": "Backend developer"
                  },
                  "position_name": null,
                  "reporting_to": "Jane Smith",
                  "responsibilities": "Develop software, collaborate with team, write tests",
                  "probation_period": null,
                  "probation_duration_months": 3,
                  "probation_tasks": "Complete the onboarding process, develop a small project",
                  "consider_new_responsibilities": true,
                  "new_responsibilities": "Handle client communications",
                  "fixed_salary": 5000,
                  "variable_salary_percentage": 10,
                  "percentage_from": 1000,
                  "additional_bonuses": "Year-end bonus, project completion bonus",
                  "salary_paid": "Monthly",
                  "penalties": "Late for work, missed deadlines",
                  "overtime_compensation": true,
                  "overtime_compensation_text": "Paid at 1.5x hourly rate",
                  "sick_leave_paid": true,
                  "sick_leave_text": "Up to 10 days paid sick leave per year",
                  "salary_review_opportunity": true,
                  "salary_indexation": false,
                  "working_week": {
                      "id": 2,
                      "title": "6-дневная"
                  },
                  "working_day": "9am to 5pm",
                  "work_start_time": "16:00",
                  "work_end_time": "22:20",
                  "lunch_break_duration": "1 hour",
                  "lunch_break_start_time": "12:00",
                  "lunch_break_end_time": "13:00",
                  "work_schedule": {
                      "id": 3,
                      "title": "Гибкий график"
                  },
                  "work_format": {
                      "id": 2,
                      "title": "Удаленно"
                  },
                  "working_hours_type": {
                      "id": 1,
                      "title": "Фиксированные"
                  },
                  "work_address": "",
                  "vacation_duration": "30 days",
                  "job_start_date": "2023-08-28",
                  "job_start_time": "12:00",
                  "additional_conditions": "Remote work available 2 days a week",
                  "contact_person": "Алексей Иванов",
                  "position": "Менеджер по продажам",
                  "phone_number": "+7 123 456-78-90",
                  "email": "a.ivanov@example.com",
                  "call_time_from": "09:00",
                  "call_time_to": "18:00",
                  "availability_option": {
                      "id": 1,
                      "title": "в любое время"
                  },
                  "response_due_date": "2022-10-28",
                  "created_at": "2023-08-28T08:22:04.000000Z"
              },
              "status": "success"
          }
        headers: []
        description: 'Успешный запрос'
        custom: []
      -
        status: 404
        content: |
          {
              "message": "The selected offer id is invalid.",
              "errors": {
                  "offer_id": [
                      "The selected offer id is invalid."
                  ]
              }
          }
        headers: []
        description: 'Предложение не найдено'
        custom: []
      -
        status: 500
        content: |
          {
              "message": "Unknown error",
              "status": "error"
          }
        headers: []
        description: 'Ошибка сервера'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/job-offer/delete
    metadata:
      groupName: EmployerFiles
      groupDescription: ''
      subgroup: JobOffers
      subgroupDescription: ''
      title: 'Удаление предложений о работе.'
      description: |-
        Этот метод помечает предложения о работе как архивные.
        Метод принимает массив идентификаторов предложений о работе и устанавливает для них флаг "is_archive" равный 1.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ids:
        name: ids
        description: 'Массив идентификаторов предложений о работе, которые нужно архивировать. Пример: [1, 2, 3]'
        required: true
        example:
          - non
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      ids:
        - non
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, PATCH, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/schedule
    metadata:
      groupName: EmployerFiles
      groupDescription: ''
      subgroup: Schedule
      subgroupDescription: ''
      title: 'Получение списка расписаний работы.'
      description: 'Этот метод возвращает все доступные варианты расписания работы.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, PATCH, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/work-format
    metadata:
      groupName: EmployerFiles
      groupDescription: ''
      subgroup: WorkFormat
      subgroupDescription: ''
      title: 'Получение списка форматов работы.'
      description: 'Этот метод возвращает все доступные форматы работы.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, PATCH, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/work-hour
    metadata:
      groupName: EmployerFiles
      groupDescription: ''
      subgroup: WorkHour
      subgroupDescription: ''
      title: 'Получение списка типов рабочих часов.'
      description: 'Этот метод возвращает все доступные типы рабочих часов.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, PATCH, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/availability-option
    metadata:
      groupName: EmployerFiles
      groupDescription: ''
      subgroup: AvailabilityOption
      subgroupDescription: ''
      title: 'Получение списка вариантов доступности.'
      description: 'Этот метод возвращает все доступные варианты доступности.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, PATCH, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/working-week
    metadata:
      groupName: EmployerFiles
      groupDescription: ''
      subgroup: WorkingWeek
      subgroupDescription: ''
      title: 'Получение списка рабочих недель.'
      description: 'Этот метод возвращает все доступные рабочие недели.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, PATCH, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
