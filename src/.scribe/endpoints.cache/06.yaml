## Autogenerated by Scribe. DO NOT MODIFY.

name: CoverLetter
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/create-cover-letter
    metadata:
      groupName: CoverLetter
      groupDescription: ''
      subgroup: Create
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'string Данное поле обязательно. Максимум 50 символов.'
        required: false
        example: Официальное
        type: required
        custom: []
      content:
        name: content
        description: 'Данное поле не обязательно. Максимум 1000 символов.'
        required: false
        example: 'Я очень хороший работник'
        type: string
        custom: []
    cleanBodyParameters:
      title: Официальное
      content: 'Я очень хороший работник'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              "data": {
                  "title": "coverleter1",
                  "content": "sdgg",
                  "account_id": 11,
                  "updated_at": "2023-07-11T14:04:29.000000Z",
                  "created_at": "2023-07-11T14:04:29.000000Z",
                  "id": 16
              },
              "status": "success"
          }
        headers: []
        description: 'Сопроводительное письмо создано'
        custom: []
      -
        status: 500
        content: |-
          {
              "message": "Cover letter is not created",
              "status": "error"
          }
        headers: []
        description: 'Сопроводительное письмо не создано, ошибка сервера'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/get-cover-letter/{id}'
    metadata:
      groupName: CoverLetter
      groupDescription: ''
      subgroup: Get
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: ''
        required: false
        example: 8
        type: integer
        custom: []
    cleanUrlParameters:
      id: 8
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "data": {
                  "id": 11,
                  "title": "new title",
                  "content": "new content",
                  "account_id": 11,
                  "created_at": "2023-07-11T11:44:42.000000Z",
                  "updated_at": "2023-07-11T14:08:57.000000Z",
                  "deleted": 0
              },
              "status": "success"
          }
        headers: []
        description: 'Сопроводительное найдено'
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "Cover letter is not found",
              "status": "error"
          }
        headers: []
        description: 'Сопроводительное с указанным id не найден'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/update-cover-letter
    metadata:
      groupName: CoverLetter
      groupDescription: ''
      subgroup: Update-delete
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      cover_letter_id:
        name: cover_letter_id
        description: 'integer Данное поле обязательно.'
        required: false
        example: '12'
        type: required
        custom: []
      title:
        name: title
        description: 'string Данное поле обязательно. Максимум 50 символов.'
        required: false
        example: Официальное
        type: required
        custom: []
      content:
        name: content
        description: 'Данное поле не обязательно. Максимум 1000 символов.'
        required: false
        example: 'Я очень хороший работник'
        type: string
        custom: []
    cleanBodyParameters:
      cover_letter_id: '12'
      title: Официальное
      content: 'Я очень хороший работник'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "data": {
                  "id": 11,
                  "title": "new title",
                  "content": "new content",
                  "account_id": 11,
                  "created_at": "2023-07-11T11:44:42.000000Z",
                  "updated_at": "2023-07-11T14:08:57.000000Z",
                  "deleted": 0
              },
              "status": "success"
          }
        headers: []
        description: 'Сопроводительное письмо обновлено'
        custom: []
      -
        status: 400
        content: |-
          {
              "message": "Cover letter is deleted",
              "status": "error"
          }
        headers: []
        description: 'Сопроводительное письмо было удалено'
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "Cover letter is not found",
              "status": "error"
          }
        headers: []
        description: 'Сопроводительное письмо не найдено для данного пользователя'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/delete-cover-letter/{id}'
    metadata:
      groupName: CoverLetter
      groupDescription: ''
      subgroup: Update-delete
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: ''
        required: false
        example: 5
        type: integer
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "data": {
                  "id": 11,
                  "title": "new title",
                  "content": "new content",
                  "account_id": 11,
                  "created_at": "2023-07-11T11:44:42.000000Z",
                  "updated_at": "2023-07-11T14:15:43.000000Z",
                  "deleted": 1
              },
              "status": "success"
          }
        headers: []
        description: 'Сопроводительное письмо удалено'
        custom: []
      -
        status: 400
        content: |-
          {
              "message": "Cover letter is already deleted",
              "status": "error"
          }
        headers: []
        description: 'Сопроводительное письмо уже было удалено'
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "Cover letter is not found",
              "status": "error"
          }
        headers: []
        description: 'Сопроводительное письмо не найдено для данного пользователя'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/get-cover-letter-list
    metadata:
      groupName: CoverLetter
      groupDescription: ''
      subgroup: Get
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "data": [
                  {
                      "id": 16,
                      "title": "coverleter1",
                      "content": "sdgg",
                      "account_id": 11,
                      "created_at": "2023-07-11T14:04:29.000000Z",
                      "updated_at": "2023-07-11T14:04:29.000000Z",
                      "deleted": 0
                  },
                  {
                      "id": 17,
                      "title": "coverleter1",
                      "content": "sdgg",
                      "account_id": 11,
                      "created_at": "2023-07-11T14:24:20.000000Z",
                      "updated_at": "2023-07-11T14:24:20.000000Z",
                      "deleted": 0
                  }
              ],
              "status": "success"
          }
        headers: []
        description: 'Сопроводительные письма отправлены'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/mass-delete-cover-letter
    metadata:
      groupName: CoverLetter
      groupDescription: ''
      subgroup: Update-delete
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: ''
        required: false
        example: 8
        type: integer
        custom: []
    cleanUrlParameters:
      id: 8
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "data": {
                  "id": 11,
                  "title": "new title",
                  "content": "new content",
                  "account_id": 11,
                  "created_at": "2023-07-11T11:44:42.000000Z",
                  "updated_at": "2023-07-11T14:15:43.000000Z",
                  "deleted": 1
              },
              "status": "success"
          }
        headers: []
        description: 'Сопроводительные письма удалены'
        custom: []
      -
        status: 400
        content: |-
          {
              "message": "Cover letter is already deleted",
              "status": "error"
          }
        headers: []
        description: 'Сопроводительное письмо уже было удалено'
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "Cover letter is not found",
              "status": "error"
          }
        headers: []
        description: 'Сопроводительное письмо не найдено для данного пользователя'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
